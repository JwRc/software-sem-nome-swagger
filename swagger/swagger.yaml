# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: SoftwareSemNome API
  description: SofwareSemNome API is a REST API for engineering management
  version: "0.5.0"
# the domain of the service
host: api.SoftwareSemNome.com
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
paths:
  /Projects/GetProjects:
    get:
      summary: Get All Projects
      description: |
        The Projects endpoint returns information about all the projects for this partner.
        The response includes a boolean error, and an array of projects
        The projects will be shown 
      parameters:
        - name: paginator
          in: query
          description: Page of the query.
          required: false
          type: number
          format: integer
        - name: index
          in: query
          description: Initial index of the query.
          required: false
          type: number
          format: integer
        - name: desc
          in: query
          description: Makes query take first last items
          required: false
          type: boolean
          default: false
      tags:
        - Projects
      responses:
        200:
          description: An array of projects
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Endpoint error flag
              projects:
                type: array
                items:
                  $ref: '#/definitions/Project'
        400:
          description: Input Errors
          schema:
            $ref: '#/definitions/Error'
  /Projects/CreateProject:
    post:
      summary: Create a new Project
      consumes:
        - application/json
      description: |
        Register a new project in database
      parameters:
        - in: body
          name: project
          description: Project to be created.
          schema:
            type: object
            required:
              - external_id
              - name
              - description
            properties:
              external_id:
                type: string
              name:
                type: string
              description:
                type: string 
      tags:
        - Projects
      responses:
        200:
          description: Object with the uuid generated by the server
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Error Flag
              project:
                type: string
                description: Unique identifier generated by the server
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /Projects/{uuid}/Update:
    put:
      summary: Update project
      description: Endpoint to change the name or description
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - in: body
          name: changes
          description: Changes to be made
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
      tags:
        - Projects
      responses:
        200:
          description: error flag and the uuid of the changed project
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              project:
                type: string
                description: Uuid of the changed project
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /Projects/{uuid}/Delete:
    delete:
      summary: Delete project
      description: Endpoint that makes a soft delete in the projects
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      tags:
        - Projects
      responses:
        200:
          description: error flag and the uuid of the changed project
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              project:
                type: string
                description: Uuid of the changed project
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /Disciplines/GetDisciplines:
    get:
      summary: Get All Disciplines
      description: |
        The Disciplines endpoint returns information about all the disciplines for this partner.
        The response includes a boolean error, and an array of disciplines
      parameters:
        - name: paginator
          in: query
          description: Page of the query.
          required: false
          type: number
          format: integer
        - name: index
          in: query
          description: Initial index of the query.
          required: false
          type: number
          format: integer
        - name: desc
          in: query
          description: Makes query take first last items
          required: false
          type: boolean
          default: false
      tags:
        - Disciplines
      responses:
        200:
          description: An array of disciplines
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Endpoint error flag
              disciplines:
                type: array
                items:
                  $ref: '#/definitions/Disciplines'
        400:
          description: Input Errors
          schema:
            $ref: '#/definitions/Error'
  /Disciplines/CreateDiscipline:
    post:
      summary: Create a new Discipline
      consumes:
        - application/json
      description: |
        Register a new discipline in database
      parameters:
        - in: body
          name: discipline
          description: Discipline to be created.
          schema:
            type: object
            required:
              - external_id
              - name
              - description
            properties:
              external_id:
                type: string
              name:
                type: string
              description:
                type: string 
      tags:
        - Disciplines
      responses:
        200:
          description: Object with the uuid generated by the server
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Error Flag
              discipline:
                type: string
                description: Unique identifier generated by the server
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /Discipline/{uuid}/Update:
    put:
      summary: Update Discipline
      description: Endpoint to change the name or description
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
        - in: body
          name: changes
          description: Changes to be made
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
      tags:
        - Disciplines
      responses:
        200:
          description: error flag and the uuid of the changed discipline
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              discipline:
                type: string
                description: Uuid of the changed discipline
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /Discipline/{uuid}/Delete:
    delete:
      summary: Delete discipline
      description: Endpoint that makes a soft delete in the projects
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      tags:
        - Disciplines
      responses:
        200:
          description: error flag and the uuid of the changed discipline
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              discipline:
                type: string
                description: Uuid of the changed discipline
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /timesheet/GetTimesheet:
    get:
      summary: List timesheet
      description: |
        List all hours pointed in the timesheet, can be ordered by date asc or desc
        Can be filtered with pagination
      parameters:
        - name: paginator
          in: query
          description: Page of the query.
          required: false
          type: number
          format: integer
        - name: index
          in: query
          description: Initial index of the query.
          required: false
          type: number
          format: integer
        - name: desc
          in: query
          description: Makes query take first last items
          required: false
          type: boolean
          default: false
      tags:
        - Timesheet
      responses:
        200:
          description: An array of disciplines
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Endpoint error flag
              disciplines:
                type: array
                items:
                  $ref: '#/definitions/TimesheetRegister'
        400:
          description: Input Errors
          schema:
            $ref: '#/definitions/Error'
  /timesheet/PointHours:
    post:
      summary: Create a new register in timesheet
      consumes:
        - application/json
      description: |
        Creates a new register in timesheet
      parameters:
        - in: body
          name: timesheet
          description: Discipline to be created.
          schema:
            type: object
            required:
              - type
              - description
              - discipline
              - hours
            properties:
              type:
                type: string
              description:
                type: string
              discipline:
                type: string 
              hours:
                type: string
      tags:
        - Timesheet
      responses:
        200:
          description: Object with the uuid generated by the server
          schema:
            type: object
            properties:
              error:
                type: boolean
                description: Error Flag
              discipline:
                type: string
                description: Unique identifier generated by the server
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /timesheet/{uuid}/approve:
    put:
      summary: Approves a timesheet register
      description: Endpoint to approve a timesheet register
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      tags:
        - Timesheet
      responses:
        200:
          description: error flag and the uuid of the changed register
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              timesheet:
                type: string
                description: Uuid of the changed register
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /timesheet/{uuid}/reprove:
    put:
      summary: Reproves a timesheet register
      description: Endpoint to reprove a timesheet register
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      tags:
        - Timesheet
      responses:
        200:
          description: error flag and the uuid of the changed register
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              timesheet:
                type: string
                description: Uuid of the changed register
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /Timesheet/{uuid}/Delete:
    delete:
      summary: Delete timesheet register
      description: Endpoint that makes a soft delete in the timesheet
      consumes: 
        - application/json
      parameters:
        - name: uuid
          in: path
          required: true
          type: string
      tags:
        - Timesheet
      responses:
        200:
          description: error flag and the uuid of the changed timesheet register
          schema:
            type: object
            properties:
              error:
                type: string
                description: Error Flag
              discipline:
                type: string
                description: Uuid of the changed timesheet register
        default:
          description: Input errors
          schema:
            $ref: '#/definitions/Error'
  /User/Login:
    post:
      summary: User login
      description: receives user's e-mail and password to generate a jwt token
      tags:
        - User
      responses:
        200:
          description: User Login
          schema:
            type: object
            properties: 
              auth:
                type: boolean
              token:
                type: string
              expiresIn:
                type: number
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /User/Logout:
    post:
      summary: User logout
      description: Blacklist user token
      tags:
        - User
      responses:
        200:
          description: User Logout
          schema:
            type: object
            properties:
              success:
                type: boolean
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Project:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier defined by the backend
      external_id:
        type: string
        description: Unique identifier defined by the client
      name:
        type: string
        description: Name of the project.
      description:
        type: string
        description: Description of the project.
      created_at:
        type: string
        description: time when the project was created.
      updated_at:
        type: string
        description: Time of the last update in the project.
  Disciplines:
    type: object
    properties:
      uuid: 
        type: string
        description: Unique identifier defined by the backend
      external_id:
        type: string
        description: Unique identifier defined by the client
      name:
        type: string
        description: Name of the discipline.
      description:
        type: string
        description: Description of the discipline.
      created_at:
        type: string
        description: time when the discipline was created.
      updated_at:
        type: string
        description: Time of the last update in the discipline.
  TimesheetRegister:
    type: object
    properties:
      uuid:
        type: string
        description: Unique identifier defined by the backend
      type:
        type: string
        description: the of the timesheet, defines wich type of work was done
      description:
        type: string
        description: Brief description of the work
      hours:
        type: string
        description: Number of hours spent in this task
      status:
        type: string
        description: Current status of the register
      created_at:
        type: string
        description: Time when the register was created
      updated_at:
        type: string
        description: Time of the last update
      Discipline:
        description: the discipline which this task belongs
        type: object
        properties:
          uuid:
            type: string
          external_id:
            type: string
          name:
            type: string
      User:
        description: User who pointed the register
        type: object
        properties:
          uuid:
            type: string
          name:
            type: string
          lastname:
            type: string
      Reviwer:
        description: User who approved or reproved the register
        type: object
        properties:
          uuid:
            type: string
          name:
            type: string
          lastname:
            type: string
  Error:
    type: object
    properties:
      error:
        type: boolean
      message:
        type: string
